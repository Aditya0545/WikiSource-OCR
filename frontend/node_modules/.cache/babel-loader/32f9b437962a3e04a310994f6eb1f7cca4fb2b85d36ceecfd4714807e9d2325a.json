{"ast":null,"code":"var _jsxFileName = \"/home/aditya/Mediawiki-Works/Tesseract-OCR-Wiki/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Box, Typography, Paper, CircularProgress, Alert, LinearProgress, Divider, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState('');\n  const [error, setError] = useState('');\n  const [progress, setProgress] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [languages, setLanguages] = useState([]);\n  const [selectedLanguage, setSelectedLanguage] = useState('eng');\n  useEffect(() => {\n    // Fetch supported languages\n    axios.get('http://localhost:5000/api/languages').then(response => {\n      setLanguages(response.data);\n    }).catch(err => {\n      console.error('Error fetching languages:', err);\n    });\n  }, []);\n  const onDrop = async acceptedFiles => {\n    const file = acceptedFiles[0];\n    setFile(file);\n    setLoading(true);\n    setError('');\n    setResult('');\n    setProgress(0);\n    setTotalPages(0);\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('language', selectedLanguage);\n    try {\n      const response = await axios.post('http://localhost:5000/api/ocr', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setProgress(percentCompleted);\n        }\n      });\n      setResult(response.data.text);\n      if (response.data.pages) {\n        setTotalPages(response.data.pages);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'An error occurred during OCR processing');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': ['.png', '.jpg', '.jpeg', '.tiff'],\n      'application/pdf': ['.pdf'],\n      'application/x-djvu': ['.djvu']\n    },\n    multiple: false\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        my: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        component: \"h1\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Wikisource OCR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"language-select-label\",\n          children: \"Language\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"language-select-label\",\n          value: selectedLanguage,\n          label: \"Language\",\n          onChange: e => setSelectedLanguage(e.target.value),\n          children: languages.map(lang => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: lang.code,\n            children: [lang.name, \" (\", lang.script, \")\"]\n          }, lang.code, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        ...getRootProps(),\n        sx: {\n          p: 3,\n          textAlign: 'center',\n          cursor: 'pointer',\n          bgcolor: isDragActive ? 'action.hover' : 'background.paper',\n          border: '2px dashed',\n          borderColor: isDragActive ? 'primary.main' : 'grey.300',\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mt: 1\n            },\n            children: [\"Processing... \", progress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), totalPages > 0 && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mt: 1\n            },\n            children: [\"Processing \", totalPages, \" pages\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: isDragActive ? \"Drop the file here\" : \"Drag and drop a file here, or click to select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), file && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        gutterBottom: true,\n        children: [\"Selected file: \", file.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), result && /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2,\n          whiteSpace: 'pre-wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"OCR Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GbAkAJpoOVM9atV98eBvBLCfRHc=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Box","Typography","Paper","CircularProgress","Alert","LinearProgress","Divider","FormControl","InputLabel","Select","MenuItem","useDropzone","axios","jsxDEV","_jsxDEV","App","_s","file","setFile","loading","setLoading","result","setResult","error","setError","progress","setProgress","totalPages","setTotalPages","languages","setLanguages","selectedLanguage","setSelectedLanguage","get","then","response","data","catch","err","console","onDrop","acceptedFiles","formData","FormData","append","post","headers","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","text","pages","_err$response","_err$response$data","getRootProps","getInputProps","isDragActive","accept","multiple","maxWidth","children","sx","my","variant","component","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","mb","id","labelId","value","label","onChange","e","target","map","lang","code","name","script","p","textAlign","cursor","bgcolor","border","borderColor","width","mt","severity","whiteSpace","_c","$RefreshReg$"],"sources":["/home/aditya/Mediawiki-Works/Tesseract-OCR-Wiki/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Container, \n  Box, \n  Typography, \n  Paper, \n  CircularProgress,\n  Alert,\n  LinearProgress,\n  Divider,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from '@mui/material';\nimport { useDropzone } from 'react-dropzone';\nimport axios from 'axios';\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState('');\n  const [error, setError] = useState('');\n  const [progress, setProgress] = useState(0);\n  const [totalPages, setTotalPages] = useState(0);\n  const [languages, setLanguages] = useState([]);\n  const [selectedLanguage, setSelectedLanguage] = useState('eng');\n\n  useEffect(() => {\n    // Fetch supported languages\n    axios.get('http://localhost:5000/api/languages')\n      .then(response => {\n        setLanguages(response.data);\n      })\n      .catch(err => {\n        console.error('Error fetching languages:', err);\n      });\n  }, []);\n\n  const onDrop = async (acceptedFiles) => {\n    const file = acceptedFiles[0];\n    setFile(file);\n    setLoading(true);\n    setError('');\n    setResult('');\n    setProgress(0);\n    setTotalPages(0);\n\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('language', selectedLanguage);\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/ocr', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n        onUploadProgress: (progressEvent) => {\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\n          setProgress(percentCompleted);\n        },\n      });\n      \n      setResult(response.data.text);\n      if (response.data.pages) {\n        setTotalPages(response.data.pages);\n      }\n    } catch (err) {\n      setError(err.response?.data?.error || 'An error occurred during OCR processing');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': ['.png', '.jpg', '.jpeg', '.tiff'],\n      'application/pdf': ['.pdf'],\n      'application/x-djvu': ['.djvu']\n    },\n    multiple: false\n  });\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box sx={{ my: 4 }}>\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\">\n          Wikisource OCR\n        </Typography>\n\n        <FormControl fullWidth sx={{ mb: 3 }}>\n          <InputLabel id=\"language-select-label\">Language</InputLabel>\n          <Select\n            labelId=\"language-select-label\"\n            value={selectedLanguage}\n            label=\"Language\"\n            onChange={(e) => setSelectedLanguage(e.target.value)}\n          >\n            {languages.map((lang) => (\n              <MenuItem key={lang.code} value={lang.code}>\n                {lang.name} ({lang.script})\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        \n        <Paper\n          {...getRootProps()}\n          sx={{\n            p: 3,\n            textAlign: 'center',\n            cursor: 'pointer',\n            bgcolor: isDragActive ? 'action.hover' : 'background.paper',\n            border: '2px dashed',\n            borderColor: isDragActive ? 'primary.main' : 'grey.300',\n            mb: 3\n          }}\n        >\n          <input {...getInputProps()} />\n          {loading ? (\n            <Box sx={{ width: '100%' }}>\n              <CircularProgress />\n              <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                Processing... {progress}%\n              </Typography>\n              {totalPages > 0 && (\n                <Typography variant=\"body2\" sx={{ mt: 1 }}>\n                  Processing {totalPages} pages\n                </Typography>\n              )}\n            </Box>\n          ) : (\n            <Typography>\n              {isDragActive\n                ? \"Drop the file here\"\n                : \"Drag and drop a file here, or click to select\"}\n            </Typography>\n          )}\n        </Paper>\n\n        {file && (\n          <Typography variant=\"body1\" gutterBottom>\n            Selected file: {file.name}\n          </Typography>\n        )}\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n\n        {result && (\n          <Paper sx={{ p: 2, whiteSpace: 'pre-wrap' }}>\n            <Typography variant=\"h6\" gutterBottom>\n              OCR Result\n            </Typography>\n            <Divider sx={{ mb: 2 }} />\n            <Typography variant=\"body1\">\n              {result}\n            </Typography>\n          </Paper>\n        )}\n      </Box>\n    </Container>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,SAAS,EACTC,GAAG,EACHC,UAAU,EACVC,KAAK,EACLC,gBAAgB,EAChBC,KAAK,EACLC,cAAc,EACdC,OAAO,EACPC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,QACH,eAAe;AACtB,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACwB,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC4B,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC8B,UAAU,EAAEC,aAAa,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACgC,SAAS,EAAEC,YAAY,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EAE/DC,SAAS,CAAC,MAAM;IACd;IACAc,KAAK,CAACqB,GAAG,CAAC,qCAAqC,CAAC,CAC7CC,IAAI,CAACC,QAAQ,IAAI;MAChBL,YAAY,CAACK,QAAQ,CAACC,IAAI,CAAC;IAC7B,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAAChB,KAAK,CAAC,2BAA2B,EAAEe,GAAG,CAAC;IACjD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,MAAM,GAAG,MAAOC,aAAa,IAAK;IACtC,MAAMxB,IAAI,GAAGwB,aAAa,CAAC,CAAC,CAAC;IAC7BvB,OAAO,CAACD,IAAI,CAAC;IACbG,UAAU,CAAC,IAAI,CAAC;IAChBI,QAAQ,CAAC,EAAE,CAAC;IACZF,SAAS,CAAC,EAAE,CAAC;IACbI,WAAW,CAAC,CAAC,CAAC;IACdE,aAAa,CAAC,CAAC,CAAC;IAEhB,MAAMc,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE3B,IAAI,CAAC;IAC7ByB,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEb,gBAAgB,CAAC;IAE7C,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMvB,KAAK,CAACiC,IAAI,CAAC,+BAA+B,EAAEH,QAAQ,EAAE;QAC3EI,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,gBAAgB,EAAGC,aAAa,IAAK;UACnC,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAAEH,aAAa,CAACI,MAAM,GAAG,GAAG,GAAIJ,aAAa,CAACK,KAAK,CAAC;UACvF3B,WAAW,CAACuB,gBAAgB,CAAC;QAC/B;MACF,CAAC,CAAC;MAEF3B,SAAS,CAACa,QAAQ,CAACC,IAAI,CAACkB,IAAI,CAAC;MAC7B,IAAInB,QAAQ,CAACC,IAAI,CAACmB,KAAK,EAAE;QACvB3B,aAAa,CAACO,QAAQ,CAACC,IAAI,CAACmB,KAAK,CAAC;MACpC;IACF,CAAC,CAAC,OAAOjB,GAAG,EAAE;MAAA,IAAAkB,aAAA,EAAAC,kBAAA;MACZjC,QAAQ,CAAC,EAAAgC,aAAA,GAAAlB,GAAG,CAACH,QAAQ,cAAAqB,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcpB,IAAI,cAAAqB,kBAAA,uBAAlBA,kBAAA,CAAoBlC,KAAK,KAAI,yCAAyC,CAAC;IAClF,CAAC,SAAS;MACRH,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM;IAAEsC,YAAY;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGjD,WAAW,CAAC;IAChE6B,MAAM;IACNqB,MAAM,EAAE;MACN,SAAS,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC;MAC7C,iBAAiB,EAAE,CAAC,MAAM,CAAC;MAC3B,oBAAoB,EAAE,CAAC,OAAO;IAChC,CAAC;IACDC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,oBACEhD,OAAA,CAACf,SAAS;IAACgE,QAAQ,EAAC,IAAI;IAAAC,QAAA,eACtBlD,OAAA,CAACd,GAAG;MAACiE,EAAE,EAAE;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAF,QAAA,gBACjBlD,OAAA,CAACb,UAAU;QAACkE,OAAO,EAAC,IAAI;QAACC,SAAS,EAAC,IAAI;QAACC,YAAY;QAACC,KAAK,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAEpE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAEb5D,OAAA,CAACP,WAAW;QAACoE,SAAS;QAACV,EAAE,EAAE;UAAEW,EAAE,EAAE;QAAE,CAAE;QAAAZ,QAAA,gBACnClD,OAAA,CAACN,UAAU;UAACqE,EAAE,EAAC,uBAAuB;UAAAb,QAAA,EAAC;QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC5D5D,OAAA,CAACL,MAAM;UACLqE,OAAO,EAAC,uBAAuB;UAC/BC,KAAK,EAAEhD,gBAAiB;UACxBiD,KAAK,EAAC,UAAU;UAChBC,QAAQ,EAAGC,CAAC,IAAKlD,mBAAmB,CAACkD,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE;UAAAf,QAAA,EAEpDnC,SAAS,CAACuD,GAAG,CAAEC,IAAI,iBAClBvE,OAAA,CAACJ,QAAQ;YAAiBqE,KAAK,EAAEM,IAAI,CAACC,IAAK;YAAAtB,QAAA,GACxCqB,IAAI,CAACE,IAAI,EAAC,IAAE,EAACF,IAAI,CAACG,MAAM,EAAC,GAC5B;UAAA,GAFeH,IAAI,CAACC,IAAI;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEd,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAEd5D,OAAA,CAACZ,KAAK;QAAA,GACAwD,YAAY,CAAC,CAAC;QAClBO,EAAE,EAAE;UACFwB,CAAC,EAAE,CAAC;UACJC,SAAS,EAAE,QAAQ;UACnBC,MAAM,EAAE,SAAS;UACjBC,OAAO,EAAEhC,YAAY,GAAG,cAAc,GAAG,kBAAkB;UAC3DiC,MAAM,EAAE,YAAY;UACpBC,WAAW,EAAElC,YAAY,GAAG,cAAc,GAAG,UAAU;UACvDgB,EAAE,EAAE;QACN,CAAE;QAAAZ,QAAA,gBAEFlD,OAAA;UAAA,GAAW6C,aAAa,CAAC;QAAC;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,EAC7BvD,OAAO,gBACNL,OAAA,CAACd,GAAG;UAACiE,EAAE,EAAE;YAAE8B,KAAK,EAAE;UAAO,CAAE;UAAA/B,QAAA,gBACzBlD,OAAA,CAACX,gBAAgB;YAAAoE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpB5D,OAAA,CAACb,UAAU;YAACkE,OAAO,EAAC,OAAO;YAACF,EAAE,EAAE;cAAE+B,EAAE,EAAE;YAAE,CAAE;YAAAhC,QAAA,GAAC,gBAC3B,EAACvC,QAAQ,EAAC,GAC1B;UAAA;YAAA8C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,EACZ/C,UAAU,GAAG,CAAC,iBACbb,OAAA,CAACb,UAAU;YAACkE,OAAO,EAAC,OAAO;YAACF,EAAE,EAAE;cAAE+B,EAAE,EAAE;YAAE,CAAE;YAAAhC,QAAA,GAAC,aAC9B,EAACrC,UAAU,EAAC,QACzB;UAAA;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CACb;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,gBAEN5D,OAAA,CAACb,UAAU;UAAA+D,QAAA,EACRJ,YAAY,GACT,oBAAoB,GACpB;QAA+C;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CACb;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,EAEPzD,IAAI,iBACHH,OAAA,CAACb,UAAU;QAACkE,OAAO,EAAC,OAAO;QAACE,YAAY;QAAAL,QAAA,GAAC,iBACxB,EAAC/C,IAAI,CAACsE,IAAI;MAAA;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CACb,EAEAnD,KAAK,iBACJT,OAAA,CAACV,KAAK;QAAC6F,QAAQ,EAAC,OAAO;QAAChC,EAAE,EAAE;UAAEW,EAAE,EAAE;QAAE,CAAE;QAAAZ,QAAA,EACnCzC;MAAK;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR,EAEArD,MAAM,iBACLP,OAAA,CAACZ,KAAK;QAAC+D,EAAE,EAAE;UAAEwB,CAAC,EAAE,CAAC;UAAES,UAAU,EAAE;QAAW,CAAE;QAAAlC,QAAA,gBAC1ClD,OAAA,CAACb,UAAU;UAACkE,OAAO,EAAC,IAAI;UAACE,YAAY;UAAAL,QAAA,EAAC;QAEtC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACb5D,OAAA,CAACR,OAAO;UAAC2D,EAAE,EAAE;YAAEW,EAAE,EAAE;UAAE;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1B5D,OAAA,CAACb,UAAU;UAACkE,OAAO,EAAC,OAAO;UAAAH,QAAA,EACxB3C;QAAM;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB;AAAC1D,EAAA,CArJQD,GAAG;EAAA,QAwD4CJ,WAAW;AAAA;AAAAwF,EAAA,GAxD1DpF,GAAG;AAuJZ,eAAeA,GAAG;AAAC,IAAAoF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}